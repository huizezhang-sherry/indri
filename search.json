[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 tidyindex authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"H. Sherry Zhang. Author, maintainer. Dianne Cook. Author. Ursula Laa. Author. Nicolas Langrené. Author. Patricia Menéndez. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zhang H, Cook D, Laa U, Langrené N, Menéndez P (2023). tidyindex: general data pipeline computing indexes. R package version 0.0.1, https://github.com/huizezhang-sherry/tidyindex.","code":"@Manual{,   title = {tidyindex: A general data pipeline for computing indexes},   author = {H. Sherry Zhang and Dianne Cook and Ursula Laa and Nicolas Langrené and Patricia Menéndez},   year = {2023},   note = {R package version 0.0.1},   url = {https://github.com/huizezhang-sherry/tidyindex}, }"},{"path":"/index.html","id":"tidyindex","dir":"","previous_headings":"","what":"A general data pipeline for computing indexes","title":"A general data pipeline for computing indexes","text":"Tidyindex provides infrastructures construct analyse indexes pipeline workflow. pipeline workflow contains 9 modules users arrange index, including: spatial processing temporal processing variable transformation scaling dimension reduction distribution fit normalising benchmarking simplification package still early experimental stage ","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A general data pipeline for computing indexes","text":"can install development version GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"huizezhang-sherry/tidyindex\")"},{"path":"/reference/aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"The temporal processing module — aggregate","title":"The temporal processing module — aggregate","text":"temporal processing module","code":""},{"path":"/reference/aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The temporal processing module — aggregate","text":"","code":"aggregate(data, .var, .scale, ..., na.rm = TRUE, .new_name = \".agg\")"},{"path":"/reference/aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The temporal processing module — aggregate","text":"data data frame .var variable aggregate along .scale time scale aggregate ... ignore na.rm logical, whether remove pending NAs aggregated .new_name output name temporal processing","code":""},{"path":"/reference/aggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The temporal processing module — aggregate","text":"data frame variable specified aggregated scale","code":""},{"path":"/reference/aggregate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The temporal processing module — aggregate","text":"","code":"# first 11 NA rows are removed unless specified through na.rm = FALSE tenterfield %>%   init(id = id, time = ym, indicators = prcp:tavg) %>%   aggregate(.var = prcp, .scale = 12) #> Joining with `by = join_by(variables)` #> Warning: Unquoting language objects with `!!!` is deprecated as of rlang 0.4.0. Please #> use `!!` instead. #>  #> # Bad: dplyr::select(data, !!!enquo(x)) #>  #> # Good: dplyr::select(data, !!enquo(x)) # Unquote single quosure #> dplyr::select(data, !!!enquos(x)) # Splice list of quosures #> This warning is displayed once every 8 hours. #> Removing the pending NAs due to aggregation #> Index pipeline:  #>  #> Summary:  #> temporal: `slider::slide_dbl(.x = ~prcp, sum, .before = 12 - 1, .complete = #> TRUE)` -> .agg #>  #> Data:  #> # A tibble: 358 × 11 #>    id                ym  prcp  tmax   tmin  tavg  long   lat name    .agg .scale #>    <chr>          <mth> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> <chr>  <dbl>  <dbl> #>  1 ASN00056032 1990 Dec   640  30.4 14.7   22.6   152. -29.0 tente…  8382     12 #>  2 ASN00056032 1991 Jan  1108  27.5 15.9   21.7   152. -29.0 tente…  8608     12 #>  3 ASN00056032 1991 Feb   628  28.0 15.5   21.8   152. -29.0 tente…  7976     12 #>  4 ASN00056032 1991 Mar   204  26.2 11.8   19.0   152. -29.0 tente…  7926     12 #>  5 ASN00056032 1991 Apr    44  24.2  6.57  15.4   152. -29.0 tente…  6376     12 #>  6 ASN00056032 1991 May   630  21.3  7.52  14.4   152. -29.0 tente…  5786     12 #>  7 ASN00056032 1991 Jun   242  19.6  3.65  11.6   152. -29.0 tente…  5634     12 #>  8 ASN00056032 1991 Jul   580  15.3  0.519  7.91  152. -29.0 tente…  5596     12 #>  9 ASN00056032 1991 Aug    14  17.8  1.67   9.76  152. -29.0 tente…  5276     12 #> 10 ASN00056032 1991 Sep    78  21.1  3.07  12.1   152. -29.0 tente…  5088     12 #> # ℹ 348 more rows  # with multiple scales tenterfield %>%   init(id = id, time = ym, indicators = prcp:tavg) %>%   aggregate(.var = prcp, .scale = c(12, 24)) #> Joining with `by = join_by(variables)` #> Removing the pending NAs due to aggregation #> Index pipeline:  #>  #> Summary:  #> temporal: `slider::slide_dbl(.x = ~prcp, sum, .before = 12 - 1, .complete = #> TRUE)` -> .agg #> temporal: `slider::slide_dbl(.x = ~prcp, sum, .before = 24 - 1, .complete = #> TRUE)` -> .agg #>  #> Data:  #> # A tibble: 704 × 11 #>    id                ym  prcp  tmax   tmin  tavg  long   lat name   .scale  .agg #>    <chr>          <mth> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> <chr>   <dbl> <dbl> #>  1 ASN00056032 1990 Dec   640  30.4 14.7   22.6   152. -29.0 tente…     12  8382 #>  2 ASN00056032 1991 Jan  1108  27.5 15.9   21.7   152. -29.0 tente…     12  8608 #>  3 ASN00056032 1991 Feb   628  28.0 15.5   21.8   152. -29.0 tente…     12  7976 #>  4 ASN00056032 1991 Mar   204  26.2 11.8   19.0   152. -29.0 tente…     12  7926 #>  5 ASN00056032 1991 Apr    44  24.2  6.57  15.4   152. -29.0 tente…     12  6376 #>  6 ASN00056032 1991 May   630  21.3  7.52  14.4   152. -29.0 tente…     12  5786 #>  7 ASN00056032 1991 Jun   242  19.6  3.65  11.6   152. -29.0 tente…     12  5634 #>  8 ASN00056032 1991 Jul   580  15.3  0.519  7.91  152. -29.0 tente…     12  5596 #>  9 ASN00056032 1991 Aug    14  17.8  1.67   9.76  152. -29.0 tente…     12  5276 #> 10 ASN00056032 1991 Sep    78  21.1  3.07  12.1   152. -29.0 tente…     12  5088 #> # ℹ 694 more rows"},{"path":"/reference/augment.html","id":null,"dir":"Reference","previous_headings":"","what":"The normalising module — augment","title":"The normalising module — augment","text":"normalising module","code":""},{"path":"/reference/augment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The normalising module — augment","text":"","code":"augment(.data, .var = var, .new_name = \".index\")"},{"path":"/reference/augment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The normalising module — augment","text":".data index table object .var variable normalise .new_name character, new variable name `augment`","code":""},{"path":"/reference/augment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The normalising module — augment","text":"index table object","code":""},{"path":"/reference/augment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The normalising module — augment","text":"","code":"library(lubridate) #>  #> Attaching package: ‘lubridate’ #> The following objects are masked from ‘package:base’: #>  #>     date, intersect, setdiff, union library(lmomco) tenterfield %>%   init(id = id, time = ym, indicators = prcp:tavg) %>%   aggregate(.var = prcp, .scale = 12) %>%   dist_fit(.dist = gamma(), .method = \"lmoms\", .var = .agg) %>%   augment(.var = .agg) #> Joining with `by = join_by(variables)` #> Removing the pending NAs due to aggregation #> Index pipeline:  #>  #> Summary:  #> temporal: `slider::slide_dbl(.x = ~prcp, sum, .before = 12 - 1, .complete = #> TRUE)` -> .agg #> dist fit: `NA` -> .fit #> normalise: `NA` -> .fitted #> normalise: `qnorm(.fitted)` -> .index #>  #> Data:  #> # A tibble: 358 × 16 #>    .period id                ym  prcp  tmax   tmin  tavg  long   lat name   .agg #>      <dbl> <chr>          <mth> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> <chr> <dbl> #>  1      12 ASN00056032 1990 Dec   640  30.4 14.7   22.6   152. -29.0 tent…  8382 #>  2       1 ASN00056032 1991 Jan  1108  27.5 15.9   21.7   152. -29.0 tent…  8608 #>  3       2 ASN00056032 1991 Feb   628  28.0 15.5   21.8   152. -29.0 tent…  7976 #>  4       3 ASN00056032 1991 Mar   204  26.2 11.8   19.0   152. -29.0 tent…  7926 #>  5       4 ASN00056032 1991 Apr    44  24.2  6.57  15.4   152. -29.0 tent…  6376 #>  6       5 ASN00056032 1991 May   630  21.3  7.52  14.4   152. -29.0 tent…  5786 #>  7       6 ASN00056032 1991 Jun   242  19.6  3.65  11.6   152. -29.0 tent…  5634 #>  8       7 ASN00056032 1991 Jul   580  15.3  0.519  7.91  152. -29.0 tent…  5596 #>  9       8 ASN00056032 1991 Aug    14  17.8  1.67   9.76  152. -29.0 tent…  5276 #> 10       9 ASN00056032 1991 Sep    78  21.1  3.07  12.1   152. -29.0 tent…  5088 #> # ℹ 348 more rows #> # ℹ 5 more variables: .scale <dbl>, .method <chr>, .fitted <dbl>, .dist <chr>, #> #   .index <dbl>"},{"path":"/reference/compute_indexes.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate multiple indexes at once — compute_indexes","title":"Calculate multiple indexes at once — compute_indexes","text":"Calculate multiple indexes ","code":""},{"path":"/reference/compute_indexes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate multiple indexes at once — compute_indexes","text":"","code":"compute_indexes(.data, .index_value = TRUE, ...)"},{"path":"/reference/compute_indexes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate multiple indexes at once — compute_indexes","text":".data `idx_tbl` object .index_value logical; whether output index values ... indexes compute","code":""},{"path":"/reference/compute_indexes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate multiple indexes at once — compute_indexes","text":"output","code":""},{"path":"/reference/compute_indexes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate multiple indexes at once — compute_indexes","text":"","code":"library(lmomco) library(lubridate) library(tsibble) #>  #> Attaching package: ‘tsibble’ #> The following object is masked from ‘package:lubridate’: #>  #>     interval #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, union library(ggplot2) res <- tenterfield %>%  init(id = id, time = ym) %>%  compute_indexes(     spi = idx_spi(.dist = loglogistic()),     spei = idx_spei(.pet_method = \"thornthwaite\" ,.tavg = tavg, .lat = lat),     edi = idx_edi()  ) #> Joining with `by = join_by(variables)` #> Removing the pending NAs due to aggregation #> [1] \"Checking for missing values (`NA`): all the data must be complete. Input type is vector. Assuming the data are monthly time series starting in January, all regular (non-leap) years.\" #> Removing the pending NAs due to aggregation #> Removing the pending NAs due to aggregation res %>%  ggplot(aes(x = ym, y = .index, color = .idx)) +  geom_line() +  theme_benchmark()"},{"path":"/reference/dist_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"The distribution fit module — dist_fit","title":"The distribution fit module — dist_fit","text":"distribution fit module","code":""},{"path":"/reference/dist_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The distribution fit module — dist_fit","text":"","code":"dist_fit(   .data,   .dist,   .gran = \"month\",   .var,   .n_boot = 1,   .boot_seed = 123,   .method = \"lmoms\" )"},{"path":"/reference/dist_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The distribution fit module — dist_fit","text":".data index table object .dist distributions .gran granularity .var variable .n_boot number bootstrap samples, default 1 .boot_seed seed bootstrap sampling .method fitting methods, one lmoms (L-moment), mle (Maximum Likelihood), mom (Method moment)","code":""},{"path":"/reference/dist_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The distribution fit module — dist_fit","text":"data frame","code":""},{"path":"/reference/dist_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The distribution fit module — dist_fit","text":"","code":"# TODO: need to add examples"},{"path":"/reference/distributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Distribution functions — gamma","title":"Distribution functions — gamma","text":"Distribution functions","code":""},{"path":"/reference/distributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distribution functions — gamma","text":"","code":"gamma()  normal()  weibull()  loglogistic()  lognormal()  gev()  pearsonIII()"},{"path":"/reference/distributions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distribution functions — gamma","text":"character representation distribution","code":""},{"path":"/reference/dr.html","id":null,"dir":"Reference","previous_headings":"","what":"The dimension reduction module — dimension_reduction","title":"The dimension reduction module — dimension_reduction","text":"need detailed documentation module","code":""},{"path":"/reference/dr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The dimension reduction module — dimension_reduction","text":"","code":"dimension_reduction(data, ...)  aggregate_linear(formula, weight)  aggregate_geometrical(formula)  manual_input(formula)"},{"path":"/reference/dr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The dimension reduction module — dimension_reduction","text":"data `idx_tbl` object ... expression evaluate formula formula dimension reduction expression weight variable `roles` table `idx_tbl` object","code":""},{"path":"/reference/dr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The dimension reduction module — dimension_reduction","text":"`idx_tbl` object","code":""},{"path":"/reference/gggi.html","id":null,"dir":"Reference","previous_headings":"","what":"Global Gender Gap Index (2023) — gggi","title":"Global Gender Gap Index (2023) — gggi","text":"Global Gender Gap Index combines 14 variables four dimensions measure gender parity across 146 countries world.","code":""},{"path":"/reference/gggi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global Gender Gap Index (2023) — gggi","text":"","code":"gggi  gggi_weights"},{"path":"/reference/gggi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Global Gender Gap Index (2023) — gggi","text":"object class tbl_df (inherits tbl, data.frame) 146 rows 22 columns. object class tbl_df (inherits tbl, data.frame) 14 rows 7 columns.","code":""},{"path":"/reference/gggi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Global Gender Gap Index (2023) — gggi","text":"dataset includes country, region, GGGI score rank, combined four dimensions (Economic Participation Opportunity, Educational Attainment, Health Survival, Political Empowerment), variables dimensions. variable composition dimension follows: * Economic Participation Opportunity: Labour force participation, Wage equality similar work, Estimated earned income, Legislators, senior officials managers, Professional technical workers * Educational attainment: Literacy rate, Enrolment primary education, Enrolment secondary education, Enrolment tertiary education * Health survival: Sex ratio birth Healthy life expectancy * Political empowerment:  Women parliament, Women ministerial positions, Years female head state Variable names cleaned [janitor::clean_names()]. weight data extracted page 65 Global Gender Gap Report (see reference), see page 61 region classification.","code":""},{"path":"/reference/gggi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global Gender Gap Index (2023) — gggi","text":"https://www3.weforum.org/docs/WEF_GGGR_2023.pdf","code":""},{"path":"/reference/hdi.html","id":null,"dir":"Reference","previous_headings":"","what":"Human Development Index (2022) — hdi","title":"Human Development Index (2022) — hdi","text":"Human Development Index (2022)","code":""},{"path":"/reference/hdi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Human Development Index (2022) — hdi","text":"","code":"hdi"},{"path":"/reference/hdi.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Human Development Index (2022) — hdi","text":"tibble three columns: id row number country 191 countries computed HDI hdi HDI index value life_exp life expectancy exp_sch expected schooling avg_sch average schooling gni_pc GNI per capital, logged","code":""},{"path":"/reference/hdi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Human Development Index (2022) — hdi","text":"https://hdr.undp.org/data-center/human-development-index#/indicies/HDI","code":""},{"path":"/reference/indexes.html","id":null,"dir":"Reference","previous_headings":"","what":"Pre-built indexes — idx_spei","title":"Pre-built indexes — idx_spei","text":"Pre-built indexes","code":""},{"path":"/reference/indexes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pre-built indexes — idx_spei","text":"","code":"idx_spei(   data,   id,   time,   .pet_method = \"thornthwaite\",   .tavg,   .lat,   .scale = 12,   .dist = loglogistic(),   .new_name = \".index\" )  idx_spi(data, id, time, .dist = gamma(), .scale = 12, .new_name = \".index\")  idx_rdi(   data,   id,   time,   .pet_method = \"thornthwaite\",   .scale = .scale,   .new_name = \".index\" )  idx_edi(data, id, time, .scale = 12, .new_name = \".index\")"},{"path":"/reference/indexes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pre-built indexes — idx_spei","text":"data data id id time time .pet_method PET method .tavg average temperature .lat latitude .scale scale .dist distribution .new_name new names","code":""},{"path":"/reference/indexes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pre-built indexes — idx_spei","text":"calculated indexes","code":""},{"path":"/reference/indexes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pre-built indexes — idx_spei","text":"","code":"library(lmomco) library(lubridate) tenterfield %>% init(id = id, time = ym) %>%    idx_spei(.tavg = tavg, .lat = lat) #> Joining with `by = join_by(variables)` #> [1] \"Checking for missing values (`NA`): all the data must be complete. Input type is vector. Assuming the data are monthly time series starting in January, all regular (non-leap) years.\" #> Removing the pending NAs due to aggregation #> Index pipeline:  #>  #> Summary:  #> var_trans: `thornthwaite(Tave = tavg, lat = -29.0479)` -> pet #> dimension_reduction: `NA` -> diff #> temporal: `slider::slide_dbl(.x = ~diff, sum, .before = 12 - 1, .complete = #> TRUE)` -> .agg #> dist fit: `NA` -> .fit #> normalise: `NA` -> .fitted #> normalise: `qnorm(.fitted)` -> .index #>  #> Data:  #> # A tibble: 358 × 18 #>    .period id          ym  prcp  tmax   tmin  tavg  long   lat name    pet  diff #>      <dbl> <chr>    <mth> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> <chr> <dbl> <dbl> #>  1      12 ASN0… 1990 Dec   640  30.4 14.7   22.6   152. -29.0 tent… 127.  513.  #>  2       1 ASN0… 1991 Jan  1108  27.5 15.9   21.7   152. -29.0 tent… 118.  990.  #>  3       2 ASN0… 1991 Feb   628  28.0 15.5   21.8   152. -29.0 tent… 102.  526.  #>  4       3 ASN0… 1991 Mar   204  26.2 11.8   19.0   152. -29.0 tent…  86.7 117.  #>  5       4 ASN0… 1991 Apr    44  24.2  6.57  15.4   152. -29.0 tent…  56.6 -12.6 #>  6       5 ASN0… 1991 May   630  21.3  7.52  14.4   152. -29.0 tent…  49.5 580.  #>  7       6 ASN0… 1991 Jun   242  19.6  3.65  11.6   152. -29.0 tent…  33.5 208.  #>  8       7 ASN0… 1991 Jul   580  15.3  0.519  7.91  152. -29.0 tent…  19.8 560.  #>  9       8 ASN0… 1991 Aug    14  17.8  1.67   9.76  152. -29.0 tent…  28.8 -14.8 #> 10       9 ASN0… 1991 Sep    78  21.1  3.07  12.1   152. -29.0 tent…  41.4  36.6 #> # ℹ 348 more rows #> # ℹ 6 more variables: .agg <dbl>, .scale <dbl>, .method <chr>, .fitted <dbl>, #> #   .dist <chr>, .index <dbl> tenterfield %>% init(id = id, time = ym) %>% idx_spi() #> Joining with `by = join_by(variables)` #> Removing the pending NAs due to aggregation #> Index pipeline:  #>  #> Summary:  #> temporal: `slider::slide_dbl(.x = ~prcp, sum, .before = 12 - 1, .complete = #> TRUE)` -> .agg #> dist fit: `NA` -> .fit #> normalise: `NA` -> .fitted #> normalise: `qnorm(.fitted)` -> .index #>  #> Data:  #> # A tibble: 358 × 16 #>    .period id                ym  prcp  tmax   tmin  tavg  long   lat name   .agg #>      <dbl> <chr>          <mth> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> <chr> <dbl> #>  1      12 ASN00056032 1990 Dec   640  30.4 14.7   22.6   152. -29.0 tent…  8382 #>  2       1 ASN00056032 1991 Jan  1108  27.5 15.9   21.7   152. -29.0 tent…  8608 #>  3       2 ASN00056032 1991 Feb   628  28.0 15.5   21.8   152. -29.0 tent…  7976 #>  4       3 ASN00056032 1991 Mar   204  26.2 11.8   19.0   152. -29.0 tent…  7926 #>  5       4 ASN00056032 1991 Apr    44  24.2  6.57  15.4   152. -29.0 tent…  6376 #>  6       5 ASN00056032 1991 May   630  21.3  7.52  14.4   152. -29.0 tent…  5786 #>  7       6 ASN00056032 1991 Jun   242  19.6  3.65  11.6   152. -29.0 tent…  5634 #>  8       7 ASN00056032 1991 Jul   580  15.3  0.519  7.91  152. -29.0 tent…  5596 #>  9       8 ASN00056032 1991 Aug    14  17.8  1.67   9.76  152. -29.0 tent…  5276 #> 10       9 ASN00056032 1991 Sep    78  21.1  3.07  12.1   152. -29.0 tent…  5088 #> # ℹ 348 more rows #> # ℹ 5 more variables: .scale <dbl>, .method <chr>, .fitted <dbl>, .dist <chr>, #> #   .index <dbl> tenterfield %>% init(id = id, time = ym) %>% idx_edi() #> Joining with `by = join_by(variables)` #> Removing the pending NAs due to aggregation #> Index pipeline:  #>  #> Summary:  #> dimension_reduction: `NA` -> mult #> temporal: `slider::slide_dbl(.x = ~mult, sum, .before = 12 - 1, .complete = #> TRUE)` -> ep #> var_trans: `rescale_zscore(var = ep)` -> .index #>  #> Data:  #> # A tibble: 358 × 13 #>    id                ym  prcp  tmax   tmin  tavg  long   lat name    mult     ep #>    <chr>          <mth> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> <chr>  <dbl>  <dbl> #>  1 ASN00056032 1990 Dec   640  30.4 14.7   22.6   152. -29.0 tent… 4134.  54292. #>  2 ASN00056032 1991 Jan  1108  27.5 15.9   21.7   152. -29.0 tent… 7154.  55722. #>  3 ASN00056032 1991 Feb   628  28.0 15.5   21.8   152. -29.0 tent… 4053.  51601. #>  4 ASN00056032 1991 Mar   204  26.2 11.8   19.0   152. -29.0 tent… 1316.  51270. #>  5 ASN00056032 1991 Apr    44  24.2  6.57  15.4   152. -29.0 tent…  284.  41223. #>  6 ASN00056032 1991 May   630  21.3  7.52  14.4   152. -29.0 tent… 4060.  37380. #>  7 ASN00056032 1991 Jun   242  19.6  3.65  11.6   152. -29.0 tent… 1559.  36387. #>  8 ASN00056032 1991 Jul   580  15.3  0.519  7.91  152. -29.0 tent… 3735.  36122. #>  9 ASN00056032 1991 Aug    14  17.8  1.67   9.76  152. -29.0 tent…   90.1 34051. #> 10 ASN00056032 1991 Sep    78  21.1  3.07  12.1   152. -29.0 tent…  502.  32832. #> # ℹ 348 more rows #> # ℹ 2 more variables: .scale <dbl>, .index <dbl>"},{"path":"/reference/init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialise the pipeline — init","title":"Initialise the pipeline — init","text":"Initialise pipeline","code":""},{"path":"/reference/init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialise the pipeline — init","text":"","code":"init(data, ...)  add_meta(data, new_meta, var_col)"},{"path":"/reference/init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialise the pipeline — init","text":"data dataset ... additional argument new_meta tibble data frame object metadata var_col variable column metadata","code":""},{"path":"/reference/init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialise the pipeline — init","text":"list object","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"/reference/print.idx_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"The print methods — print.idx_tbl","title":"The print methods — print.idx_tbl","text":"print methods","code":""},{"path":"/reference/print.idx_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The print methods — print.idx_tbl","text":"","code":"# S3 method for idx_tbl print(x, ...)"},{"path":"/reference/print.idx_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The print methods — print.idx_tbl","text":"x data ... additional argument","code":""},{"path":"/reference/print.idx_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The print methods — print.idx_tbl","text":"print","code":""},{"path":"/reference/rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"The scaling module — rescaling","title":"The scaling module — rescaling","text":"Specify either expression (like mutate) using .method.","code":""},{"path":"/reference/rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The scaling module — rescaling","text":"","code":"rescaling(data, ..., .method = NULL, .vars = NULL, .new_name = NULL)  rescale_zscore(var, na.rm = TRUE)  rescale_minmax(var, min = NULL, max = NULL, na.rm = TRUE, censor = TRUE)  rescale_center(var, na.rm = TRUE)"},{"path":"/reference/rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The scaling module — rescaling","text":"data index table object ... expression .method method use rescaling, currently rescale_minmax, rescale_zscore, rescale_center .vars variables rescale .new_name new name rescaled variable, optional var variable, argument rescale_* functions na.rm logical; whether remove NAs,  argument rescale_* functions min, max minimum maximum value used rescale_minmax censor logical; whether censor points outside min max, provided","code":""},{"path":"/reference/rescale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The scaling module — rescaling","text":"using .method, specifies varaibles applies (`.vars`), can multiple, use tidyselect syntax additional parameters parsed `...` `.new_names` needs length `.vars`","code":""},{"path":"/reference/rescale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The scaling module — rescaling","text":"","code":"dt <- hdi %>% init(id = country, indicators = life_exp:gni_pc) #> Joining with `by = join_by(variables)` # only print out the operation table show_summary <- function(obj) obj %>% .[[\"op\"]]  # single variable: show_summary(dt %>% rescaling(life_exp = rescale_minmax(life_exp))) #> # A tibble: 1 × 4 #>   module    step    var                      res      #>   <chr>     <chr>   <chr>                    <chr>    #> 1 rescaling formula rescale_minmax(life_exp) life_exp show_summary(dt %>% rescaling(.method = rescale_minmax, .vars = life_exp, min = 20, max = 85)) #> # A tibble: 1 × 4 #>   module    step           var                                             res   #>   <chr>     <chr>          <chr>                                           <chr> #> 1 rescaling rescale_minmax rescale_minmax(var = life_exp, min = 20, max =… life… show_summary(dt %>% rescaling(.method = rescale_minmax, .vars = life_exp, .new_name = \"life_exp2\")) #> # A tibble: 1 × 4 #>   module    step           var                            res       #>   <chr>     <chr>          <chr>                          <chr>     #> 1 rescaling rescale_minmax rescale_minmax(var = life_exp) life_exp2  # use tidyselect to apply the .method to multiple variables show_summary(dt %>% rescaling(.method = rescale_minmax, .vars = life_exp:exp_sch)) #> # A tibble: 2 × 4 #>   module    step           var                            res      #>   <chr>     <chr>          <chr>                          <chr>    #> 1 rescaling rescale_minmax rescale_minmax(var = life_exp) life_exp #> 2 rescaling rescale_minmax rescale_minmax(var = exp_sch)  exp_sch  # can also supply additional parameters show_summary(dt %>% rescaling(.method = rescale_minmax,                  .vars = life_exp:exp_sch,                  min = c(20, 0), max = c(85, 18),                  .new_name = c(\"life_exp2\", \"exp_sch\"))) #> # A tibble: 2 × 4 #>   module    step           var                                             res   #>   <chr>     <chr>          <chr>                                           <chr> #> 1 rescaling rescale_minmax rescale_minmax(var = life_exp, min = 20, max =… life… #> 2 rescaling rescale_minmax rescale_minmax(var = exp_sch, min = 0, max = 1… exp_…"},{"path":"/reference/swap.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace a value/expression in the pipeline with other alternatives — swap_exprs","title":"Replace a value/expression in the pipeline with other alternatives — swap_exprs","text":"Replace value/expression pipeline alternatives","code":""},{"path":"/reference/swap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace a value/expression in the pipeline with other alternatives — swap_exprs","text":"","code":"swap_exprs(obj, .var, .exprs, .raw_data)  swap_values(obj, .id, .param, .values, .raw_data)"},{"path":"/reference/swap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace a value/expression in the pipeline with other alternatives — swap_exprs","text":"obj index table object .raw_data initial index table created .id, .var ID/ variable used locate operation value/ expression .param parameter swap .values, .exprs values expressions test","code":""},{"path":"/reference/swap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace a value/expression in the pipeline with other alternatives — swap_exprs","text":"index table","code":""},{"path":"/reference/theme_benchmark.html","id":null,"dir":"Reference","previous_headings":"","what":"A ggplot2 theme for benchmarking the index series — theme_benchmark","title":"A ggplot2 theme for benchmarking the index series — theme_benchmark","text":"ggplot2 theme benchmarking index series","code":""},{"path":"/reference/theme_benchmark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A ggplot2 theme for benchmarking the index series — theme_benchmark","text":"","code":"theme_benchmark(yintercept = -2, linetype = \"dashed\")"},{"path":"/reference/theme_benchmark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A ggplot2 theme for benchmarking the index series — theme_benchmark","text":"yintercept intercpt linetype linetype","code":""},{"path":"/reference/theme_benchmark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A ggplot2 theme for benchmarking the index series — theme_benchmark","text":"ggplot2 object","code":""},{"path":"/reference/theme_benchmark.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A ggplot2 theme for benchmarking the index series — theme_benchmark","text":"","code":"if (require(\"ggplot2\", quietly = TRUE) ){ dplyr::tibble(x = 1:100, y = rnorm(100, sd = 2)) %>%   ggplot(aes(x = x, y =y )) +   geom_line() +   theme_benchmark() }"},{"path":"/reference/thornthwaite.html","id":null,"dir":"Reference","previous_headings":"","what":"The thornthwaite method in calculating SPEI — thornthwaite","title":"The thornthwaite method in calculating SPEI — thornthwaite","text":"thornthwaite method calculating SPEI","code":""},{"path":"/reference/thornthwaite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The thornthwaite method in calculating SPEI — thornthwaite","text":"","code":"thornthwaite(Tave, lat, ...)"},{"path":"/reference/thornthwaite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The thornthwaite method in calculating SPEI — thornthwaite","text":"Tave tavg lat lat ... arguement","code":""},{"path":"/reference/thornthwaite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The thornthwaite method in calculating SPEI — thornthwaite","text":"data frame","code":""},{"path":"/reference/thornthwaite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The thornthwaite method in calculating SPEI — thornthwaite","text":"","code":"# tobefilled"},{"path":"/reference/tidy.idx_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"A tidy method for the index table — tidy.idx_tbl","title":"A tidy method for the index table — tidy.idx_tbl","text":"tidy method index table","code":""},{"path":"/reference/tidy.idx_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A tidy method for the index table — tidy.idx_tbl","text":"","code":"# S3 method for idx_tbl tidy(x, ...)"},{"path":"/reference/tidy.idx_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A tidy method for the index table — tidy.idx_tbl","text":"x data ... others","code":""},{"path":"/reference/tidy.idx_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A tidy method for the index table — tidy.idx_tbl","text":"tidied index table","code":""},{"path":"/reference/tidy.idx_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A tidy method for the index table — tidy.idx_tbl","text":"","code":"# tobefilled"},{"path":"/reference/tidyindex-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tidyindex: A general data pipeline for computing indexes — tidyindex-package","title":"tidyindex: A general data pipeline for computing indexes — tidyindex-package","text":"Tools construct analyse indexes pipeline workflow. `tidyindex` contains modules transforming variables, aggregating variables across time, reducing data dimension weighting, fitting distributions.","code":""},{"path":[]},{"path":"/reference/tidyindex-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tidyindex: A general data pipeline for computing indexes — tidyindex-package","text":"Maintainer: H. Sherry Zhang huize.zhang@monash.edu (ORCID) Authors: Dianne Cook dicook@monash.edu (ORCID) Ursula Laa ursula.laa@boku.ac.(ORCID) Nicolas Langrené nicolas.langrene@csiro.au (ORCID) Patricia Menéndez patricia.menendez@monash.edu (ORCID)","code":""},{"path":"/reference/var_trans.html","id":null,"dir":"Reference","previous_headings":"","what":"The variable transformation module — var_trans","title":"The variable transformation module — var_trans","text":"variable transformation module","code":""},{"path":"/reference/var_trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The variable transformation module — var_trans","text":"","code":"var_trans(data, ..., .method = NULL, .vars = NULL, .new_name = NULL)"},{"path":"/reference/var_trans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The variable transformation module — var_trans","text":"data index table object ... transformation expression .method function used transformation .vars variables transform .new_name character, new variable name var_trans","code":""},{"path":"/reference/var_trans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The variable transformation module — var_trans","text":"index table","code":""},{"path":"/reference/var_trans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The variable transformation module — var_trans","text":"","code":"tenterfield %>%   init(id = id, time = ym, indicators = prcp:tavg) %>%   var_trans(.method = thornthwaite, .vars = tavg, lat = lat, .new_name = \"pet\") #> Joining with `by = join_by(variables)` #> [1] \"Checking for missing values (`NA`): all the data must be complete. Input type is vector. Assuming the data are monthly time series starting in January, all regular (non-leap) years.\" #> Index pipeline:  #>  #> Summary:  #> var_trans: `thornthwaite(Tave = tavg, lat = -29.0479)` -> pet #>  #> Data:  #> # A tibble: 369 × 10 #>    id                ym  prcp  tmax  tmin  tavg  long   lat name             pet #>    <chr>          <mth> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <chr>          <dbl> #>  1 ASN00056032 1990 Jan   882  27.0 15.2  21.1   152. -29.0 tenterfield (… 113.  #>  2 ASN00056032 1990 Feb  1260  26.1 16.0  21.0   152. -29.0 tenterfield (…  97.0 #>  3 ASN00056032 1990 Mar   254  23.8 13.4  18.6   152. -29.0 tenterfield (…  83.9 #>  4 ASN00056032 1990 Apr  1594  20.4 12.5  16.5   152. -29.0 tenterfield (…  62.8 #>  5 ASN00056032 1990 May  1220  19.1  6.66 12.9   152. -29.0 tenterfield (…  42.1 #>  6 ASN00056032 1990 Jun   394  14.6  3.19  8.88  152. -29.0 tenterfield (…  22.5 #>  7 ASN00056032 1990 Jul   618  15.5  1.95  8.75  152. -29.0 tenterfield (…  23.1 #>  8 ASN00056032 1990 Aug   334  14.3  2.49  8.41  152. -29.0 tenterfield (…  23.1 #>  9 ASN00056032 1990 Sep   266  18.7  5.4  12.1   152. -29.0 tenterfield (…  41.2 #> 10 ASN00056032 1990 Oct   362  23.3  7.6  15.4   152. -29.0 tenterfield (…  66.1 #> # ℹ 359 more rows"},{"path":"/reference/weather.html","id":null,"dir":"Reference","previous_headings":"","what":"Weather data for in-situ stations in Queensland from 1990 to 2020 — tenterfield","title":"Weather data for in-situ stations in Queensland from 1990 to 2020 — tenterfield","text":"Weather data -situ stations Queensland 1990 2020","code":""},{"path":"/reference/weather.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weather data for in-situ stations in Queensland from 1990 to 2020 — tenterfield","text":"","code":"tenterfield  aus_climate  queensland"},{"path":"/reference/weather.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Weather data for in-situ stations in Queensland from 1990 to 2020 — tenterfield","text":"tibble 9 columns: id station ID, ASN000xxxxx ym date `tsibble::yearmonth` format prcp aggregated monthly precipitation daily data tmax, tmin, tavg maximum/minimum/ average temperature long, lat longitude latitude station name station name object class tbl_df (inherits tbl, data.frame) 52373 rows 9 columns. object class tbl_df (inherits tbl, data.frame) 11252 rows 9 columns.","code":""}]
